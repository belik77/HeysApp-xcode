{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "SearchListControl"
    },
    "designerId": "841fff61-84cf-4d04-b8a6-160df2a97bb5",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "SearchList",
                "selector": "#SearchList",
                "xtype": "list"
            },
            "designerId": "3aaed60d-b681-4923-bb7e-6ff73898cd6e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onListInitialize",
                "implHandler": [
                    "console.log('list init!!');\r",
                    "this.RefreshList();"
                ],
                "name": "initialize",
                "designer|targetType": "Ext.dataview.List",
                "designer|controlQuery": "SearchList"
            },
            "designerId": "46235679-e120-4c12-972d-eeb03ff6855a"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "detailMap",
                "selector": "#detailMap",
                "xtype": "Ext.Map"
            },
            "designerId": "79cee333-a98a-4e65-b8a9-7c5123515ce9"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "launch",
                "implHandler": [
                    "console.log('search screen launch');\r",
                    "// Initialize Google Map Services\r",
                    "this.directionsDisplay = new google.maps.DirectionsRenderer();\r",
                    "this.directionsService = new google.maps.DirectionsService();\r",
                    "\r",
                    "var mapRendererOptions = {\r",
                    "    //draggable: true,  //Allows to drag route\r",
                    "    //hideRouteList: true,\r",
                    "    suppressMarkers: true\r",
                    "};\r",
                    "\r",
                    "this.directionsDisplay.setOptions(mapRendererOptions);\r",
                    "\r",
                    "//var localStore = Ext.getStore('LocalStore');\r",
                    "\r",
                    "/*var localStore = Ext.StoreManager.get('LocalStore');\r",
                    "\r",
                    "localStore.add({Longitude: \"-2\", Latitude: \"-1\"});\r",
                    "\r",
                    "console.log(localStore);*/\r",
                    "\r",
                    "//check if the screen was loaded already before\r",
                    "\r",
                    "//load stores:\r",
                    ""
                ]
            },
            "designerId": "02f47bd9-2f31-4552-aa4a-81eed0c22d85"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "locatemebtn",
                "selector": "#locatemebtn",
                "xtype": "Ext.Button"
            },
            "designerId": "757d278c-cea0-4c95-a59a-d95261d7dc63"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onLocateButtonTap",
                "implHandler": [
                    "//alert('map init');\r",
                    "//var detailmap = this.getdetailMap();\r",
                    "\r",
                    "var detailmap = button.up('tabpanel').down('map[id=detailMap]');\r",
                    "console.log('render');\r",
                    "//var detailmap = map;\r",
                    "\r",
                    "detailmap.setMapOptions({\r",
                    "    zoom: 11\r",
                    "});\r",
                    "\r",
                    "var longitude;\r",
                    "var latitude;\r",
                    "\r",
                    "if(Ext.os.is.iOS || Ext.os.is.Android)\r",
                    "{\r",
                    "    if (Ext.device)\r",
                    "    {\r",
                    "        Ext.device.Geolocation.getCurrentPosition({\r",
                    "            scope: this,\r",
                    "            success: function(position) {\r",
                    "                this.setMasked(false);\r",
                    "                //this.map.setMapCenter(position.coords);\r",
                    "                latitude = position.coords.latitude;\r",
                    "                longitude = position.coords.longitude;                         \r",
                    "            },\r",
                    "            failure: function() {\r",
                    "                this.setMasked(false);\r",
                    "                Ext.device.Notification.show({\r",
                    "                    title: 'Geolocation',\r",
                    "                    message: 'Cannot identify your location.'\r",
                    "                });\r",
                    "            }\r",
                    "        });\r",
                    "    }\r",
                    "}\r",
                    "//else if (Ext.os.is.Windows || Ext.os.is.Windows.MacOS)\r",
                    "else if (navigator.geolocation)\r",
                    "{\r",
                    "    console.log('os win!!');\r",
                    "\r",
                    "    var options = {\r",
                    "        timeout: 10000,\r",
                    "        maximumAge: 20000,\r",
                    "        enableHighAccuracy: true\r",
                    "    };\r",
                    "\r",
                    "\r",
                    "    /* navigator.geolocation.getCurrentPosition(function(pos){\r",
                    "    latitude = pos.coords.latitude;\r",
                    "    longitude = pos.coords.longitude;  \r",
                    "    console.log(latitude); //this works\r",
                    "    console.log(longitude); //this works\r",
                    "    }, function(){\r",
                    "    console.log('failed');\r",
                    "    latitude = '0';\r",
                    "    longitude = '0';\r",
                    "    }, options);*/\r",
                    "\r",
                    "    longitude = '35.187128';\r",
                    "    latitude = '31.788777';\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    longitude = '0';\r",
                    "    latitude = '0'; \r",
                    "}\r",
                    "\r",
                    "detailmap.setMapCenter({\r",
                    "    latitude: latitude,\r",
                    "    longitude: longitude\r",
                    "});\r",
                    "\r",
                    "\r",
                    "//Tracking Marker Image\r",
                    "image = new google.maps.MarkerImage(\r",
                    "'resources/images/point.png',\r",
                    "new google.maps.Size(32, 31),\r",
                    "new google.maps.Point(0, 0),\r",
                    "new google.maps.Point(16, 31)\r",
                    ");\r",
                    "\r",
                    "\r",
                    "var store = Ext.data.StoreManager.lookup('BusinessStore');\r",
                    "\r",
                    "store.load(function() {\r",
                    "    store.each(function(record){\r",
                    "        //console.log(record.get('Latitude'));\r",
                    "\r",
                    "        var position = new google.maps.LatLng(record.get('Latitude'), record.get('Longitude'));  //Sencha HQ\r",
                    "        var marker = new google.maps.Marker({\r",
                    "            position: position,\r",
                    "            title : record.get('BusinessName'),\r",
                    "            map: detailmap.getMap(),\r",
                    "            icon: image\r",
                    "        });\r",
                    "\r",
                    "        infowindow = new google.maps.InfoWindow({\r",
                    "            content: record.get('BusinessName')\r",
                    "        });\r",
                    "\r",
                    "        google.maps.event.addListener(marker, 'click', function() {\r",
                    "            infowindow.open(detailmap.getMap(), marker);\r",
                    "        });\r",
                    "\r",
                    "\r",
                    "    });\r",
                    "});\r",
                    ""
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "locatemebtn"
            },
            "designerId": "2b411e11-d7ad-43e1-8c48-7fc1c828d60f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onMapMaprender",
                "implHandler": [
                    "/*//alert('map init');\r",
                    "//var detailmap = this.getdetailMap();\r",
                    "\r",
                    "console.log('render');\r",
                    "\r",
                    "var detailmap = map.up('tabpanel').down('map[id=detailMap]');\r",
                    "\r",
                    "//var detailmap = map;\r",
                    "\r",
                    "detailmap.setMapOptions({\r",
                    "    zoom: 18\r",
                    "});\r",
                    "\r",
                    "var lon = '35.187128';\r",
                    "var lat = '31.788777';\r",
                    "\r",
                    "detailmap.setMapCenter({\r",
                    "    latitude: lat,\r",
                    "    longitude: lon\r",
                    "});\r",
                    "\r",
                    "\r",
                    "//Tracking Marker Image\r",
                    "image = new google.maps.MarkerImage(\r",
                    "'resources/images/point.png',\r",
                    "new google.maps.Size(32, 31),\r",
                    "new google.maps.Point(0, 0),\r",
                    "new google.maps.Point(16, 31)\r",
                    ");\r",
                    "\r",
                    "var position = new google.maps.LatLng(lat, lon);  //Sencha HQ\r",
                    "var marker = new google.maps.Marker({\r",
                    "    position: position,\r",
                    "    title : 'המיקום שלי',\r",
                    "    map: detailmap.getMap(),\r",
                    "    icon: image\r",
                    "});\r",
                    "\r",
                    "infowindow = new google.maps.InfoWindow({\r",
                    "    content: 'המיקום שלי'\r",
                    "});\r",
                    "\r",
                    "google.maps.event.addListener(marker, 'click', function() {\r",
                    "    infowindow.open(detailmap.getMap(), marker);\r",
                    "});\r",
                    "\r",
                    "\r",
                    "\r",
                    "//To place the marker\r",
                    "\r",
                    "var marker = new google.maps.Marker({\r",
                    "    position: center,\r",
                    "    map: detailsmap.map\r",
                    "});*/\r",
                    ""
                ],
                "name": "maprender",
                "designer|targetType": "Ext.Map",
                "designer|controlQuery": "map"
            },
            "designerId": "f2ba1b6e-5ea9-4cfe-b669-f16dcf7eb5df"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onListSelect",
                "implHandler": [
                    "\r",
                    "\r",
                    "//save the selected businessID\r",
                    "var values = {\"SelectedBusinessID\": record.get('id'), \"distance\": record.get('distance')}; \r",
                    "var newRecord = new MyApp.model.LocalData(values);\r",
                    "Ext.getStore('LocalStore').add(newRecord);\r",
                    "//save the data to the Web local Storage\r",
                    "Ext.getStore('LocalStore').sync();\r",
                    "\r",
                    "/*var LocalStore = Ext.getStore('LocalStore'); // Shortcut\r",
                    "var aRecord = LocalStore.getAt(0); \r",
                    "console.log('count of store is: '+LocalStore.getCount());\r",
                    "console.log('Selected business ID is: ' + aRecord.get('SelectedBusinessID'));\r",
                    "*/\r",
                    "\r",
                    "var Screen;\r",
                    "Screen = Ext.create('MyApp.view.BusinessScreen', {\r",
                    "    id: 'BusinessScreen'\r",
                    "});\r",
                    "\r",
                    "var title = Screen.down('titlebar[id=BusinessScreenTitle]');\r",
                    "\r",
                    "//set the title of the business\r",
                    "title.setTitle(record.get('BusinessName'));\r",
                    "\r",
                    "Ext.Viewport.setActiveItem(Screen);"
                ],
                "name": "select",
                "designer|targetType": "Ext.dataview.List",
                "designer|controlQuery": "SearchList"
            },
            "designerId": "548b03ad-be08-43ce-990c-54f3c51dbacc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "RefreshList",
                "implHandler": [
                    "//var MyNearByStore = Ext.getStore('MyApp.store.NearByStore');\r",
                    "console.log('list refresh!!');\r",
                    "var longitude;\r",
                    "var latitude;\r",
                    "\r",
                    "if(Ext.os.is.iOS || Ext.os.is.Android)\r",
                    "{\r",
                    "    if (Ext.device)\r",
                    "    {\r",
                    "        Ext.device.Geolocation.getCurrentPosition({\r",
                    "            scope: this,\r",
                    "            success: function(position) {\r",
                    "                this.setMasked(false);\r",
                    "                //this.map.setMapCenter(position.coords);                \r",
                    "                latitude = position.coords.latitude;\r",
                    "                longitude = position.coords.longitude;   \r",
                    "                console.log(\"Geolocation: succeed to identify the location: lat:\"+latitude+\" ,lon\"+longitude);\r",
                    "            },\r",
                    "            failure: function() {\r",
                    "                this.setMasked(false);\r",
                    "                console.log(\"Geolocation: Cannot identify your location\");\r",
                    "                //define default.\r",
                    "                longitude = '35.187128';\r",
                    "                latitude = '31.788777';\r",
                    "                Ext.device.Notification.show({\r",
                    "                    title: 'Geolocation',\r",
                    "                    message: 'Cannot identify your location.'\r",
                    "                });\r",
                    "            }\r",
                    "        });\r",
                    "    }\r",
                    "}\r",
                    "/*else if (Ext.os.is.Windows || Ext.os.is.Windows.MacOS)\r",
                    "{\r",
                    "console.log('os win!!');\r",
                    "longitude = '35.187128';\r",
                    "latitude = '31.788777';\r",
                    "}*/\r",
                    "else if (navigator.geolocation)\r",
                    "{\r",
                    "    console.log('os win!!');\r",
                    "\r",
                    "    var options = {\r",
                    "        timeout: 10000,\r",
                    "        maximumAge: 20000,\r",
                    "        enableHighAccuracy: true\r",
                    "    };\r",
                    "\r",
                    "\r",
                    "    /* navigator.geolocation.getCurrentPosition(function(pos){\r",
                    "    latitude = pos.coords.latitude;\r",
                    "    longitude = pos.coords.longitude;  \r",
                    "    console.log(latitude); //this works\r",
                    "    console.log(longitude); //this works\r",
                    "    }, function(){\r",
                    "    console.log('failed');\r",
                    "    latitude = '0';\r",
                    "    longitude = '0';\r",
                    "    }, options);*/\r",
                    "\r",
                    "    longitude = '35.187128';\r",
                    "    latitude = '31.788777';\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    longitude = '35.187128';\r",
                    "    latitude = '31.788777'; \r",
                    "}\r",
                    "\r",
                    "\r",
                    "//var list = Ext.getCmp('#NearByList');\r",
                    "var list = this.getSearchList();\r",
                    "var sorter = 'distance';\r",
                    "//var list = Ext.getCmp('#SearchList');\r",
                    "var url = 'http://'+localStorage.serverpath+'/Server-side/GetBusinessesByParams.php?longitude='+longitude+'&latitude='+latitude+'&filtered=1&sortingBy=distance&location=-1&cat=3&text=Haoman&lastrow=-1';\r",
                    "console.log(url);\r",
                    "list.getStore().getProxy().setUrl(url);\r",
                    "list.getStore().load({callback: function(records, operation, success) {\r",
                    "    list.setMasked(false);\r",
                    "    console.log('MASK IS REMOVED!!');\r",
                    "    var count = list.getStore().getCount();\r",
                    "    var data = list.getStore().getRange();\r",
                    "    console.log('count : ' + count);\r",
                    "    console.log('data : ' + data);\r",
                    "    list.getStore().sort(sorter,'DESC');\r",
                    "    list.refresh();\r",
                    "    //list.show();\r",
                    "}\r",
                    "});"
                ]
            },
            "designerId": "3ff7b4e9-1871-42d1-bc2b-d247a2bb7f01"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onRefreshButtonTap",
                "implHandler": [
                    "\r",
                    "console.log('refresh button tap1!!');\r",
                    "this.RefreshList();"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "refreshbtn"
            },
            "designerId": "f5d10afa-88ad-4693-a1bf-a56e058b4dc6"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "refreshbtn",
                "selector": "#refreshbtn",
                "xtype": "Ext.Button"
            },
            "designerId": "eed6d447-a9e4-4527-a878-f2cff7978cc7"
        }
    ]
}