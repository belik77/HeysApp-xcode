{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "NearByListControl"
    },
    "designerId": "379ad79f-3b5d-4c23-8f7e-afa07a979537",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "NearByList",
                "selector": "#NearByList",
                "xtype": "list"
            },
            "designerId": "7e8f963d-17a6-45b5-bafe-7877d3680458"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onNearByListInitialize",
                "implHandler": [
                    "console.log('onNearByListInitialize');\r",
                    "//var MyNearByStore = Ext.getStore('MyApp.store.NearByStore');\r",
                    "\r",
                    "var longitude;\r",
                    "var latitude;\r",
                    "\r",
                    "\r",
                    "this.FindCurrentLocation(function(longitude,latitude){\r",
                    "\r",
                    "    console.log('Found position in Where Are You screen: Lat<'+latitude+'>, Lon<'+longitude+'>');\r",
                    "    //var list = Ext.getCmp('#NearByList');\r",
                    "    var controller = MyApp.app.getController( 'MyApp.controller.NearByListControl');\r",
                    "    var list = controller.getNearByList();\r",
                    "\r",
                    "    /*var UserStore = Ext.getStore('UserStore');\r",
                    "    var aRecord = UserStore.getAt(0);\r",
                    "    var user_id = aRecord.get('user_id');*/\r",
                    "    //var BusinessStore= Ext.create('MyApp.store.BusinessStore');\r",
                    "    //list.setStore(BusinessStore);\r",
                    "    //var list2 = Ext.getCmp('NearByList');\r",
                    "    var url = 'http://'+localStorage.serverpath+'/Server-side/GetBusinessesByParams.php?longitude='+longitude+'&latitude='+latitude+'&filtered=0&sortingBy=distance&user_id='+localStorage.user_id;\r",
                    "    console.log(url);\r",
                    "    list.getStore().getProxy().setUrl(url);\r",
                    "    list.getStore().load({callback: function(records, operation, success) {\r",
                    "        list.setMasked(false);\r",
                    "        console.log('MASK IS REMOVED!!');\r",
                    "        var count = list.getStore().getCount();\r",
                    "        var data = list.getStore().getRange();\r",
                    "        console.log('BusinessStoreNearByScreen count : ' + count);\r",
                    "        console.log('BusinessStoreNearByScreen data : ' + data);\r",
                    "        list.refresh();\r",
                    "        //list.show();\r",
                    "    }\r",
                    "});\r",
                    "});\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "initialize",
                "designer|targetType": "Ext.dataview.List",
                "designer|controlQuery": "NearByList"
            },
            "designerId": "327119dc-ab61-4ab8-841b-13563e1044ee"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onNearByListSelect",
                "implHandler": [
                    "//Ext.Msg.alert('Selected!', 'You selected ' + record.get('id'));\r",
                    "var Screen;\r",
                    "\r",
                    "//console.log(record.get('id'));\r",
                    "var ScreenSelector;\r",
                    "var view;\r",
                    "var id;\r",
                    "\r",
                    "\r",
                    "//Hide the \"Where are you\" screen\r",
                    "var LocScreen = Ext.ComponentQuery.query('#MyLocScreen');\r",
                    "\r",
                    "if(LocScreen.length===0)//no\r",
                    "{\r",
                    "    LocScreen = Ext.create('MyApp.view.MyLocScreen', {\r",
                    "        id: 'MyLocScreen'\r",
                    "    });\r",
                    "\r",
                    "    LocScreen.hide();\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    LocScreen[0].hide();\r",
                    "}\r",
                    "//identify the desired screen.\r",
                    "//we go to the rating screen\r",
                    "if(record.get('business_id')>0)\r",
                    "{\r",
                    "    ScreenSelector = '#RatePlaceScreen';\r",
                    "    view='MyApp.view.RatePlaceScreen';\r",
                    "    id='RatePlaceScreen';\r",
                    "\r",
                    "    Screen = Ext.ComponentQuery.query(ScreenSelector);\r",
                    "\r",
                    "    if(Screen.length===0)//not  exists yet\r",
                    "    {\r",
                    "        Screen = Ext.create(view, {\r",
                    "            id: id\r",
                    "        });\r",
                    "\r",
                    "        Screen.business_id = record.get('business_id');\r",
                    "\r",
                    "        Ext.Viewport.setActiveItem(Screen);\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        Screen[0].business_id = record.get('business_id');\r",
                    "        Ext.Viewport.setActiveItem(Screen[0]);\r",
                    "    }\r",
                    "    /*Screen = Ext.create('MyApp.view.RatingScreen', {\r",
                    "    id: 'RatingScreen'\r",
                    "    });*/\r",
                    "}\r",
                    "/*else//we go to the search screen\r",
                    "{\r",
                    "ScreenSelector = '#SearchScreen';\r",
                    "view='MyApp.view.SearchScreen';\r",
                    "id='SearchScreen';\r",
                    "}*/\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "select",
                "designer|targetType": "Ext.dataview.List",
                "designer|controlQuery": "NearByList"
            },
            "designerId": "91509171-1c06-4a66-8e68-318d5aebed03"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "FindCurrentLocation",
                "designer|params": [
                    "callback"
                ],
                "implHandler": [
                    "console.log('FindCurrentLocation');\r",
                    "var longitude;\r",
                    "var latitude;\r",
                    "var def_longitude = '35.208156'; \r",
                    "var def_latitude = '31.751343';\r",
                    "\r",
                    "if(Ext.os.is.iOS || Ext.os.is.Android)\r",
                    "{\r",
                    "    console.log('Ext.os.is.iOS || Ext.os.is.Android');\r",
                    "    Ext.device.Geolocation.getCurrentPosition({\r",
                    "        scope: this,\r",
                    "        success: function(position) {\r",
                    "            //this.setMasked(false);\r",
                    "            //this.map.setMapCenter(position.coords);                \r",
                    "            latitude = position.coords.latitude;\r",
                    "            longitude = position.coords.longitude;   \r",
                    "            console.log(\"Geolocation: succeed to identify the location: lat:\"+latitude+\" ,lon\"+longitude);\r",
                    "            callback(longitude,latitude);\r",
                    "        },\r",
                    "        failure: function() {\r",
                    "            //this.setMasked(false);\r",
                    "            console.log(\"Geolocation: Cannot identify your location\");\r",
                    "            //define default.\r",
                    "            longitude = def_longitude;\r",
                    "            latitude = def_latitude;\r",
                    "            Ext.device.Notification.show({\r",
                    "                title: 'Geolocation',\r",
                    "                message: 'Cannot identify your location. please make sure the GPS is turned-on'\r",
                    "            });\r",
                    "            callback(longitude,latitude);\r",
                    "        }\r",
                    "    });\r",
                    "\r",
                    "    //console.log(\"Geolocation: Cannot identify the location\");\r",
                    "    //define default.\r",
                    "    //longitude = def_longitude;\r",
                    "    //latitude = def_latitude;\r",
                    "}\r",
                    "/*else if (Ext.os.is.Windows || Ext.os.is.Windows.MacOS)\r",
                    "{\r",
                    "console.log('os win!!');\r",
                    "longitude = '35.187128';\r",
                    "latitude = '31.788777';\r",
                    "}*/\r",
                    "else if (navigator.geolocation)\r",
                    "{\r",
                    "    console.log('os win!!');\r",
                    "\r",
                    "    var options = {\r",
                    "        timeout: 10000,\r",
                    "        maximumAge: 20000,\r",
                    "        enableHighAccuracy: true\r",
                    "    };\r",
                    "\r",
                    "\r",
                    "    /* navigator.geolocation.getCurrentPosition(function(pos){\r",
                    "    latitude = pos.coords.latitude;\r",
                    "    longitude = pos.coords.longitude;  \r",
                    "    console.log(latitude); //this works\r",
                    "    console.log(longitude); //this works\r",
                    "    }, function(){\r",
                    "    console.log('failed');\r",
                    "    latitude = '0';\r",
                    "    longitude = '0';\r",
                    "    }, options);*/\r",
                    "\r",
                    "    longitude = def_longitude;\r",
                    "    latitude = def_latitude;\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    console.log('default location');\r",
                    "    longitude = def_longitude;\r",
                    "    latitude = def_latitude; \r",
                    "}\r",
                    "\r",
                    "callback(longitude,latitude);"
                ]
            },
            "designerId": "f3ceef01-4ecf-4638-aec5-9bc7e4164b92"
        }
    ]
}