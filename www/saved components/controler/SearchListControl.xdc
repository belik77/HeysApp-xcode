{
    "xdsVersion": "2.2.0",
    "frameworkVersion": "touch21",
    "internals": {
        "type": "Ext.app.Controller",
        "reference": {
            "name": "items",
            "type": "array"
        },
        "codeClass": null,
        "userConfig": {
            "designer|userClassName": "SearchListControl"
        },
        "cn": [
            {
                "type": "controllerref",
                "reference": {
                    "name": "items",
                    "type": "array"
                },
                "codeClass": null,
                "userConfig": {
                    "designer|userClassName": "SearchList",
                    "autoCreate": true,
                    "ref": "SearchList",
                    "selector": "#SearchList",
                    "xtype": "list"
                }
            },
            {
                "type": "controlleraction",
                "reference": {
                    "name": "listeners",
                    "type": "array"
                },
                "codeClass": null,
                "userConfig": {
                    "designer|userClassName": "onListInitialize",
                    "fn": "onListInitialize",
                    "implHandler": [
                        "console.log('list init!!');\r",
                        "this.RefreshList();"
                    ],
                    "name": "initialize",
                    "designer|targetType": "Ext.dataview.List",
                    "designer|controlQuery": "SearchList"
                }
            },
            {
                "type": "controllerref",
                "reference": {
                    "name": "items",
                    "type": "array"
                },
                "codeClass": null,
                "userConfig": {
                    "designer|userClassName": "detailMap",
                    "ref": "detailMap",
                    "selector": "#detailMap",
                    "xtype": "Ext.Map"
                }
            },
            {
                "type": "fixedfunction",
                "reference": {
                    "name": "items",
                    "type": "array"
                },
                "codeClass": null,
                "userConfig": {
                    "designer|userClassName": "launch",
                    "fn": "launch",
                    "implHandler": [
                        "// Initialize Google Map Services\r",
                        "this.directionsDisplay = new google.maps.DirectionsRenderer();\r",
                        "this.directionsService = new google.maps.DirectionsService();\r",
                        "\r",
                        "var mapRendererOptions = {\r",
                        "    //draggable: true,  //Allows to drag route\r",
                        "    //hideRouteList: true,\r",
                        "    suppressMarkers: true\r",
                        "};\r",
                        "\r",
                        "this.directionsDisplay.setOptions(mapRendererOptions);\r",
                        "\r",
                        "//var localStore = Ext.getStore('LocalStore');\r",
                        "\r",
                        "/*var localStore = Ext.StoreManager.get('LocalStore');\r",
                        "\r",
                        "localStore.add({Longitude: \"-2\", Latitude: \"-1\"});\r",
                        "\r",
                        "console.log(localStore);*/"
                    ]
                }
            },
            {
                "type": "controllerref",
                "reference": {
                    "name": "items",
                    "type": "array"
                },
                "codeClass": null,
                "userConfig": {
                    "designer|userClassName": "locatemebtn",
                    "ref": "locatemebtn",
                    "selector": "#locatemebtn",
                    "xtype": "Ext.Button"
                }
            },
            {
                "type": "controlleraction",
                "reference": {
                    "name": "listeners",
                    "type": "array"
                },
                "codeClass": null,
                "userConfig": {
                    "designer|userClassName": "onLocateButtonTap",
                    "fn": "onLocateButtonTap",
                    "implHandler": [
                        "//alert('map init');\r",
                        "//var detailmap = this.getdetailMap();\r",
                        "\r",
                        "var detailmap = button.up('tabpanel').down('map[id=detailMap]');\r",
                        "console.log('render');\r",
                        "//var detailmap = map;\r",
                        "\r",
                        "detailmap.setMapOptions({\r",
                        "    zoom: 11\r",
                        "});\r",
                        "\r",
                        "var longitude;\r",
                        "var latitude;\r",
                        "\r",
                        "if(Ext.os.is.iOS || Ext.os.is.Android)\r",
                        "{\r",
                        "    if (Ext.device)\r",
                        "    {\r",
                        "        Ext.device.Geolocation.getCurrentPosition({\r",
                        "            scope: this,\r",
                        "            success: function(position) {\r",
                        "                this.setMasked(false);\r",
                        "                //this.map.setMapCenter(position.coords);\r",
                        "                latitude = position.coords.latitude;\r",
                        "                longitude = position.coords.longitude;                         \r",
                        "            },\r",
                        "            failure: function() {\r",
                        "                this.setMasked(false);\r",
                        "                Ext.device.Notification.show({\r",
                        "                    title: 'Geolocation',\r",
                        "                    message: 'Cannot identify your location.'\r",
                        "                });\r",
                        "            }\r",
                        "        });\r",
                        "    }\r",
                        "}\r",
                        "//else if (Ext.os.is.Windows || Ext.os.is.Windows.MacOS)\r",
                        "else if (navigator.geolocation)\r",
                        "{\r",
                        "    console.log('os win!!');\r",
                        "\r",
                        "    var options = {\r",
                        "        timeout: 10000,\r",
                        "        maximumAge: 20000,\r",
                        "        enableHighAccuracy: true\r",
                        "    };\r",
                        "\r",
                        "\r",
                        "    /* navigator.geolocation.getCurrentPosition(function(pos){\r",
                        "    latitude = pos.coords.latitude;\r",
                        "    longitude = pos.coords.longitude;  \r",
                        "    console.log(latitude); //this works\r",
                        "    console.log(longitude); //this works\r",
                        "    }, function(){\r",
                        "    console.log('failed');\r",
                        "    latitude = '0';\r",
                        "    longitude = '0';\r",
                        "    }, options);*/\r",
                        "\r",
                        "    longitude = '35.187128';\r",
                        "    latitude = '31.788777';\r",
                        "}\r",
                        "else\r",
                        "{\r",
                        "    longitude = '0';\r",
                        "    latitude = '0'; \r",
                        "}\r",
                        "\r",
                        "detailmap.setMapCenter({\r",
                        "    latitude: latitude,\r",
                        "    longitude: longitude\r",
                        "});\r",
                        "\r",
                        "\r",
                        "//Tracking Marker Image\r",
                        "image = new google.maps.MarkerImage(\r",
                        "'resources/images/point.png',\r",
                        "new google.maps.Size(32, 31),\r",
                        "new google.maps.Point(0, 0),\r",
                        "new google.maps.Point(16, 31)\r",
                        ");\r",
                        "\r",
                        "\r",
                        "var store = Ext.data.StoreManager.lookup('BusinessStore');\r",
                        "\r",
                        "store.load(function() {\r",
                        "    store.each(function(record){\r",
                        "        //console.log(record.get('Latitude'));\r",
                        "\r",
                        "        var position = new google.maps.LatLng(record.get('Latitude'), record.get('Longitude'));  //Sencha HQ\r",
                        "        var marker = new google.maps.Marker({\r",
                        "            position: position,\r",
                        "            title : record.get('BusinessName'),\r",
                        "            map: detailmap.getMap(),\r",
                        "            icon: image\r",
                        "        });\r",
                        "\r",
                        "        infowindow = new google.maps.InfoWindow({\r",
                        "            content: record.get('BusinessName')\r",
                        "        });\r",
                        "\r",
                        "        google.maps.event.addListener(marker, 'click', function() {\r",
                        "            infowindow.open(detailmap.getMap(), marker);\r",
                        "        });\r",
                        "\r",
                        "\r",
                        "    });\r",
                        "});\r",
                        ""
                    ],
                    "name": "tap",
                    "designer|targetType": "Ext.Button",
                    "designer|controlQuery": "locatemebtn"
                }
            },
            {
                "type": "controlleraction",
                "reference": {
                    "name": "listeners",
                    "type": "array"
                },
                "codeClass": null,
                "userConfig": {
                    "designer|userClassName": "onMapMaprender",
                    "fn": "onMapMaprender",
                    "implHandler": [
                        "/*//alert('map init');\r",
                        "//var detailmap = this.getdetailMap();\r",
                        "\r",
                        "console.log('render');\r",
                        "\r",
                        "var detailmap = map.up('tabpanel').down('map[id=detailMap]');\r",
                        "\r",
                        "//var detailmap = map;\r",
                        "\r",
                        "detailmap.setMapOptions({\r",
                        "    zoom: 18\r",
                        "});\r",
                        "\r",
                        "var lon = '35.187128';\r",
                        "var lat = '31.788777';\r",
                        "\r",
                        "detailmap.setMapCenter({\r",
                        "    latitude: lat,\r",
                        "    longitude: lon\r",
                        "});\r",
                        "\r",
                        "\r",
                        "//Tracking Marker Image\r",
                        "image = new google.maps.MarkerImage(\r",
                        "'resources/images/point.png',\r",
                        "new google.maps.Size(32, 31),\r",
                        "new google.maps.Point(0, 0),\r",
                        "new google.maps.Point(16, 31)\r",
                        ");\r",
                        "\r",
                        "var position = new google.maps.LatLng(lat, lon);  //Sencha HQ\r",
                        "var marker = new google.maps.Marker({\r",
                        "    position: position,\r",
                        "    title : 'המיקום שלי',\r",
                        "    map: detailmap.getMap(),\r",
                        "    icon: image\r",
                        "});\r",
                        "\r",
                        "infowindow = new google.maps.InfoWindow({\r",
                        "    content: 'המיקום שלי'\r",
                        "});\r",
                        "\r",
                        "google.maps.event.addListener(marker, 'click', function() {\r",
                        "    infowindow.open(detailmap.getMap(), marker);\r",
                        "});\r",
                        "\r",
                        "\r",
                        "\r",
                        "//To place the marker\r",
                        "\r",
                        "var marker = new google.maps.Marker({\r",
                        "    position: center,\r",
                        "    map: detailsmap.map\r",
                        "});*/\r",
                        ""
                    ],
                    "name": "maprender",
                    "designer|targetType": "Ext.Map",
                    "designer|controlQuery": "map"
                }
            },
            {
                "type": "controlleraction",
                "reference": {
                    "name": "listeners",
                    "type": "array"
                },
                "codeClass": null,
                "userConfig": {
                    "designer|userClassName": "onListSelect",
                    "fn": "onListSelect",
                    "implHandler": [
                        "\r",
                        "\r",
                        "//save the selected businessID\r",
                        "var values = {\"SelectedBusinessID\": record.get('id'), \"distance\": record.get('distance')}; \r",
                        "var newRecord = new MyApp.model.LocalData(values);\r",
                        "Ext.getStore('LocalStore').add(newRecord);\r",
                        "//save the data to the Web local Storage\r",
                        "Ext.getStore('LocalStore').sync();\r",
                        "\r",
                        "/*var LocalStore = Ext.getStore('LocalStore'); // Shortcut\r",
                        "var aRecord = LocalStore.getAt(0); \r",
                        "console.log('count of store is: '+LocalStore.getCount());\r",
                        "console.log('Selected business ID is: ' + aRecord.get('SelectedBusinessID'));\r",
                        "*/\r",
                        "\r",
                        "var Screen;\r",
                        "Screen = Ext.create('MyApp.view.BusinessScreen', {\r",
                        "    id: 'BusinessScreen'\r",
                        "});\r",
                        "\r",
                        "var title = Screen.down('titlebar[id=BusinessScreenTitle]');\r",
                        "\r",
                        "//set the title of the business\r",
                        "title.setTitle(record.get('BusinessName'));\r",
                        "\r",
                        "Ext.Viewport.setActiveItem(Screen);"
                    ],
                    "name": "select",
                    "designer|targetType": "Ext.dataview.List",
                    "designer|controlQuery": "SearchList"
                }
            },
            {
                "type": "basicfunction",
                "reference": {
                    "name": "items",
                    "type": "array"
                },
                "codeClass": null,
                "userConfig": {
                    "designer|userClassName": "RefreshList",
                    "fn": "RefreshList",
                    "implHandler": [
                        "//var MyNearByStore = Ext.getStore('MyApp.store.NearByStore');\r",
                        "console.log('list refresh!!');\r",
                        "var longitude;\r",
                        "var latitude;\r",
                        "\r",
                        "if(Ext.os.is.iOS || Ext.os.is.Android)\r",
                        "{\r",
                        "    if (Ext.device)\r",
                        "    {\r",
                        "        Ext.device.Geolocation.getCurrentPosition({\r",
                        "            scope: this,\r",
                        "            success: function(position) {\r",
                        "                this.setMasked(false);\r",
                        "                //this.map.setMapCenter(position.coords);\r",
                        "                latitude = position.coords.latitude;\r",
                        "                longitude = position.coords.longitude;                         \r",
                        "            },\r",
                        "            failure: function() {\r",
                        "                this.setMasked(false);\r",
                        "                Ext.device.Notification.show({\r",
                        "                    title: 'Geolocation',\r",
                        "                    message: 'Cannot identify your location.'\r",
                        "                });\r",
                        "            }\r",
                        "        });\r",
                        "    }\r",
                        "}\r",
                        "/*else if (Ext.os.is.Windows || Ext.os.is.Windows.MacOS)\r",
                        "{\r",
                        "console.log('os win!!');\r",
                        "longitude = '35.187128';\r",
                        "latitude = '31.788777';\r",
                        "}*/\r",
                        "else if (navigator.geolocation)\r",
                        "{\r",
                        "    console.log('os win!!');\r",
                        "\r",
                        "    var options = {\r",
                        "        timeout: 10000,\r",
                        "        maximumAge: 20000,\r",
                        "        enableHighAccuracy: true\r",
                        "    };\r",
                        "\r",
                        "\r",
                        "    /* navigator.geolocation.getCurrentPosition(function(pos){\r",
                        "    latitude = pos.coords.latitude;\r",
                        "    longitude = pos.coords.longitude;  \r",
                        "    console.log(latitude); //this works\r",
                        "    console.log(longitude); //this works\r",
                        "    }, function(){\r",
                        "    console.log('failed');\r",
                        "    latitude = '0';\r",
                        "    longitude = '0';\r",
                        "    }, options);*/\r",
                        "\r",
                        "    longitude = '35.187128';\r",
                        "    latitude = '31.788777';\r",
                        "}\r",
                        "else\r",
                        "{\r",
                        "    longitude = '0';\r",
                        "    latitude = '0'; \r",
                        "}\r",
                        "\r",
                        "\r",
                        "//var list = Ext.getCmp('#NearByList');\r",
                        "var list = this.getSearchList();\r",
                        "var sorter = 'distance';\r",
                        "//var list = Ext.getCmp('#SearchList');\r",
                        "var url = 'http://'+localStorage.serverpath+'/Server-side/GetBusinessesByParams.php?longitude='+longitude+'&latitude='+latitude+'&filtered=1&sortingBy=distance&location=-1&cat=3&text=Haoman&lastrow=-1';\r",
                        "console.log(url);\r",
                        "list.getStore().getProxy().setUrl(url);\r",
                        "list.getStore().load({callback: function(records, operation, success) {\r",
                        "    list.setMasked(false);\r",
                        "    console.log('MASK IS REMOVED!!');\r",
                        "    var count = list.getStore().getCount();\r",
                        "    var data = list.getStore().getRange();\r",
                        "    console.log('count : ' + count);\r",
                        "    console.log('data : ' + data);\r",
                        "    list.getStore().sort(sorter,'DESC');\r",
                        "    list.refresh();\r",
                        "    //list.show();\r",
                        "}\r",
                        "});"
                    ]
                }
            },
            {
                "type": "controlleraction",
                "reference": {
                    "name": "listeners",
                    "type": "array"
                },
                "codeClass": null,
                "userConfig": {
                    "designer|userClassName": "onRefreshButtonTap",
                    "fn": "onRefreshButtonTap",
                    "implHandler": [
                        "console.log('refresh button tap!!');\r",
                        "this.RefreshList();"
                    ],
                    "name": "tap",
                    "designer|targetType": "Ext.Button",
                    "designer|controlQuery": "refreshbtn"
                }
            },
            {
                "type": "controllerref",
                "reference": {
                    "name": "items",
                    "type": "array"
                },
                "codeClass": null,
                "userConfig": {
                    "designer|userClassName": "refreshbtn",
                    "ref": "refreshbtn",
                    "selector": "#refreshbtn",
                    "xtype": "Ext.Button"
                }
            }
        ]
    },
    "linkedNodes": {},
    "boundStores": {},
    "boundModels": {}
}