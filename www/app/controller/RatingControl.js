/*
 * File: app/controller/RatingControl.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.RatingControl', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            ratingokbtn: {
                selector: '#ratingokbtn',
                xtype: 'Ext.Button'
            },
            capacitySegbtn: {
                selector: '#capacitySegbtn',
                xtype: 'Ext.SegmentedButton'
            },
            RatePlaceScreen: {
                selector: '#RatePlaceScreen',
                xtype: 'Ext.Panel'
            },
            boysgirlssegbtn: {
                selector: '#boysgirlssegbtn',
                xtype: 'Ext.SegmentedButton'
            },
            lineLengthSlider: {
                selector: '#lineLengthSlider',
                xtype: 'Ext.field.Slider'
            }
        },

        control: {
            "ratingokbtn": {
                tap: 'onratingokbtnTap'
            },
            "capacitySegbtn": {
                toggle: 'oncapacitySegbtnToggle'
            },
            "RatePlaceScreen": {
                show: 'onRatePlaceScreenshow'
            },
            "boysgirlssegbtn": {
                toggle: 'onboysgirlssegbtnToggle'
            }
        }
    },

    onratingokbtnTap: function(button, e, eOpts) {
        console.log('onratingokbtnTap');

        //if the user forget to rate something, ask him to do:
        if(button.up('panel').down('segmentedbutton[id=capacitySegbtn]').selectedbtnidx!==undefined && button.up('panel').down('segmentedbutton[id=boysgirlssegbtn]').selectedbtnidx!==undefined)
        {

            //Hide the "rating" screen
            var Screen = Ext.ComponentQuery.query('#RatePlaceScreen');
            var business_id;

            if(Screen.length===0)//no
            {
                Screen = Ext.create('MyApp.view.RatePlaceScreen', {
                    id: 'RatePlaceScreen'
                });

                business_id = Screen.business_id;
                Screen.hide();
            }
            else
            {
                Screen[0].hide();
                business_id = Screen[0].business_id;
            }

            //TODO: save the rating data to the DB.
            //load main business data
            var GeneralActionStore = Ext.getStore('GeneralActionStore');
            var url = 'http://'+localStorage.serverpath+'/Server-side/BusinessesRank.php';
            var proxy= GeneralActionStore.getProxy();
            proxy.setUrl(url);
            proxy.setExtraParam('BusinessID', business_id );
            proxy.setExtraParam('capacity', button.up('panel').down('segmentedbutton[id=capacitySegbtn]').selectedbtnidx);
            proxy.setExtraParam('MoreBoysGirls', button.up('panel').down('segmentedbutton[id=boysgirlssegbtn]').selectedbtnidx);
            proxy.setExtraParam('LineLenght', button.up('panel').down('sliderfield[id=lineLengthSlider]').getValue()[0]);
            proxy.setExtraParam('user_id', localStorage.user_id );

            GeneralActionStore.load({callback: function(records, operation, success) {
                //console.log('callback onhomepagebtnTap');
                var count = GeneralActionStore.getCount();
                var data = GeneralActionStore.getRange();
                console.log('GeneralActionStore (rating) count : ' + count);
                //console.log('GeneralActionStore (rating) data : ' + data);

                var ResultRecord = GeneralActionStore.getAt(0);
                var Result = ResultRecord.get('result');
                console.log('Result:'+Result);	

                //Realod the business data in order to update the rating data
                var controller = MyApp.app.getController( 'MyApp.controller.SearchScreen');
                controller.ReloadBusinessDataFromServer(Ext.getStore('BusinessStore').getCount());
            }   
        });

    }
    else
    {
        Ext.Msg.show({
            title:'Please Rate all fields',
            buttons: Ext.Msg.YES,
            animEl: 'elId'
        });
    }
    },

    oncapacitySegbtnToggle: function(segmentedbutton, button, isPressed, eOpts) {
        console.log('oncapacitySegbtnToggle');
        segmentedbutton.selectedbtnidx = segmentedbutton.getItems().indexOf(button);
    },

    onRatePlaceScreenshow: function(component, eOpts) {
        console.log('onRatePlaceScreenshow');
        this.getcapacitySegbtn().selectedbtnidx=-1;
        this.getboysgirlssegbtn().selectedbtnidx=-1;
    },

    onboysgirlssegbtnToggle: function(segmentedbutton, button, isPressed, eOpts) {
        console.log('onboysgirlssegbtnToggle');
        segmentedbutton.selectedbtnidx = segmentedbutton.getItems().indexOf(button);

        var boysbtn = segmentedbutton.down('button[id=boysBtn]');
        var girlsbtn = segmentedbutton.down('button[id=girlsBtn]');

        if(segmentedbutton.selectedbtnidx===0)//boys
        {
            boysbtn.setBaseCls('boysbtnselected');
            girlsbtn.setBaseCls('girlsbtn');
        }
        else//girls
        {
            boysbtn.setBaseCls('boysbtn');
            girlsbtn.setBaseCls('girlsbtnselected');
        }
    }

});